#
# Licensed to Apereo under one or more contributor license
# agreements. See the NOTICE file distributed with this work
# for additional information regarding copyright ownership.
# Apereo licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file
# except in compliance with the License.  You may obtain a
# copy of the License at the following location:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

##
## uPortal.properties
## ------------------
##
## Use this file to override the default values of configuration settings.  All settings in the
## portal have a default value baked-into the build.  These defaults are suitable for a local
## development environment.  Place a copy of this file in your ${portal.home} directory and edit to
## taste.  The default value of ${portal.home} is '${catalina.base}/portal', but you can choose
## your own location by setting a PORTAL_HOME environment variable.
##
## Please keep the formatting of this properties file as follows:
##
##   ##
##   ## Comment line 1
##   ## Comment line 2, etc
##   ##                     <-- (leave a blank commented line)
##   property_name=property_value
##                          <-- (leave a blank line...
##                          <--  or two blank lines before a new section)
##
## Leave properties that you do not wish to overrride commented-out with a single '#' and set to
## the default value (for reference).
##


################################################################################
##                                                                            ##
##                               Authentication                               ##
##                                                                            ##
################################################################################

##
## Portal Server
##
#portal.protocol=http
#portal.server=localhost:8080
#portal.context=/uPortal

##
## Central Authentication Service (CAS)
##
#cas.protocol=http
#cas.server=localhost:8080
#cas.context=/cas
#cas.ticketValidationFilter.service=${portal.protocol}://${portal.server}${portal.context}/Login
#cas.ticketValidationFilter.proxyReceptorUrl=/CasProxyServlet
#cas.ticketValidationFilter.ticketValidator.server=${cas.protocol}://${cas.server}${cas.context}
#cas.ticketValidationFilter.ticketValidator.proxyCallbackUrl=${portal.protocol}://${portal.server}${portal.context}/CasProxyServlet
org.apereo.portal.security.provider.cas.CasAssertionSecurityContextFactory.enabled=true
#org.apereo.portal.security.provider.cas.CasAssertionSecurityContextFactory.credentialToken=ticket

## Some CAS servers, like the CAS server bundled with uPortal-start can not handle encoded service URLs.
## By default, the following value is set to true
## See https://groups.google.com/a/apereo.org/d/msg/uportal-user/44Uw1YP8_Mg/hLaTlEVZFAAJ
## for the discussion regarding this property
#
cas.ticketValidationFilter.encodeServiceUrl=false

##
## LDAP
##
#org.apereo.portal.security.provider.SimpleLdapSecurityContextFactory.enabled=false
#org.apereo.portal.security.provider.SimpleLdapSecurityContextFactory.principalToken=userName
#org.apereo.portal.security.provider.SimpleLdapSecurityContextFactory.credentialToken=password

##
## Simple (database)
##
org.apereo.portal.security.provider.SimpleSecurityContextFactory.enabled=true
#org.apereo.portal.security.provider.SimpleSecurityContextFactory.principalToken=userName
#org.apereo.portal.security.provider.SimpleSecurityContextFactory.credentialToken=password

##
## Destination of the Sign On button
##
#org.apereo.portal.channels.CLogin.CasLoginUrl=${cas.protocol}://${cas.server}${cas.context}/login?service=${portal.protocol}://${portal.server}${portal.context}/Login

##
## Where should users be redirected when they log out?
##
#logout.redirect=${cas.protocol}://${cas.server}${cas.context}/logout?url=${portal.protocol}://${portal.server}${portal.context}/Login


################################################################################
##                                                                            ##
##                              User Attributes                               ##
##                                                                            ##
################################################################################

##
## LDAP connection settings for the defaultLdapContext bean, which is typically used to retrieve
## user attributes from an LDAP directory.  The 'ldap.defaultLdapContext.user' property must be a
## fully-qualified DN.
##
ldap.defaultLdapContext.url=ldaps://ldap.cpp.edu
ldap.defaultLdapContext.baseDn=ou=user,dc=cpp,dc=edu
ldap.defaultLdapContext.user=
ldap.defaultLdapContext.password=

################################################################################
##                                                                            ##
##                                  Security                                  ##
##                                                                            ##
################################################################################

##
## Encryption key for the String Encryption Service used for user password encryption (if
## applicable).  This property should be set to different value, at least in server deployments.
##
#org.apereo.portal.portlets.passwordEncryptionKey=changeme

##
## Whitelist of origins that can make POSTs to uPortal endpoints.
## Often set to CAS or IDP servers.
## Origins should include protocol, and can be a comma-delimited list.
#cors.allowed.origins=https://idp.myschool.edu, https://cas.myschool.edu


################################################################################
##                                                                            ##
##                                  Soffits                                   ##
##                                                                            ##
################################################################################

## Key for signing JSON Web Tokens (JWTs) in Soffits.  This property should be changed to an
## institution- or environment-specific value.
##
## Command to generate a value with node:
## node -e "console.log(require('crypto').randomBytes(128).toString('base64'));"
##
#org.apereo.portal.soffit.jwt.signatureKey=CHANGEMEBx0myZ/pv/e7+xrdDLYGC1iIzSa6Uw5CPpH0KCCS1deESk3v+b+LYMz1ks57tjFb9vudpSCyRKXO5TeEBc45rfMyGtkRa1zri+hukZIAfgrvCbFixpCBxBusRs+uhXRuLxOe6k77VE+EMM4jVJArtNBgVPyV7iOC05kHNiYIGgs=

## Signature algorithm option, one of:
##   HS256, HS384, HS512, RS256, RS512, ES256, ES384, ES512, PS256, PS384, PS512
##
## See: https://github.com/jwtk/jjwt/blob/master/api/src/main/java/io/jsonwebtoken/SignatureAlgorithm.java
##
#org.apereo.portal.soffit.jwt.signatureAlgorithm=HS512

## Key for encrypting JSON Web Tokens (JWTs) in Soffits.  This property should be changed to an
## institution- or environment-specific value.
##
## Command to generate a value with node:
## node -e "console.log(require('crypto').randomBytes(24).toString('hex'));"
##
#org.apereo.portal.soffit.jwt.encryptionPassword=CHANGEME


# OpenID Custom Claims
# ----------------------
# Uncomment and change the value of this setting. Additional user attributes
# in the portal may be included in the ID Token as custom claims. Custom claims
# are multi-valued arrays.
#
org.apereo.portal.security.oauth.IdTokenFactory.customClaims=calstateEduPersonEmplID

# API documentation
# When `true` Swagger docs will become availible at `/uPortal/api/swagger-ui.html`
# org.apereo.portal.rest.swagger.SwaggerConfiguration.enabled=false


################################################################################
##                                                                            ##
##                             Misc Configuration                             ##
##                                                                            ##
################################################################################

##
## Whether or not to use sub navigation level (a.k.a. Flyout Menu in old releases).
## This feature allows a sub-navigation level, like a dropdown menu on each tabs
## that will show all channels that the tab contains. And a click on a channel title will
## render it on a maximized window state.
##
org.apereo.portal.layout.useFlyoutMenus=true


# Cludo
edu.cpp.campusapps.SearchServices.cludo.CludoSearchService.baseUrl=
edu.cpp.campusapps.SearchServices.cludo.CludoSearchService.customerId=
edu.cpp.campusapps.SearchServices.cludo.CludoSearchService.engineId=
edu.cpp.campusapps.SearchServices.cludo.CludoSearchService.apiKey=
